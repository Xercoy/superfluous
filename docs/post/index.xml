<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The Superfluous Dev Blog</title>
    <link>https://xercoy.github.io/superfluous/post/</link>
    <description>Recent content in Posts on The Superfluous Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Nov 2018 21:18:58 -0700</lastBuildDate>
    
	<atom:link href="https://xercoy.github.io/superfluous/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>#004: Terraformization</title>
      <link>https://xercoy.github.io/superfluous/post/004_terraformization/</link>
      <pubDate>Sat, 03 Nov 2018 21:18:58 -0700</pubDate>
      
      <guid>https://xercoy.github.io/superfluous/post/004_terraformization/</guid>
      <description>So we have our web server and we have our Docker container that our web server is going to live in.
Basically, we have the most basic software portion down, and now we&amp;rsquo;re going to setup the &amp;lsquo;computer&amp;rsquo; its going to run on.
In this project, I&amp;rsquo;ll be using Terraform to create a Digital Ocean Droplet.
Enter Terraform Terraform is a great tool for controlling and organizing infrastructure in a safe and efficient way.</description>
    </item>
    
    <item>
      <title>#003: Dockerize</title>
      <link>https://xercoy.github.io/superfluous/post/003_dockerize/</link>
      <pubDate>Sat, 03 Nov 2018 18:29:59 -0700</pubDate>
      
      <guid>https://xercoy.github.io/superfluous/post/003_dockerize/</guid>
      <description>Now that we have a basic web server working with some tests, it&amp;rsquo;s time to Dockerize it.
This portion is pretty straightforward. There aren&amp;rsquo;t too many dependencies on it, so I created a Dockerfile that basically opened the default port and started it.
Cue technical, educational stuffs.
Docker is another popular buzzword that fills the internet, with good reason.
In a nutshell, it makes it easy to pack and ship programs.</description>
    </item>
    
    <item>
      <title>#002: Makefile</title>
      <link>https://xercoy.github.io/superfluous/post/002_makefile/</link>
      <pubDate>Sat, 03 Nov 2018 13:29:59 -0700</pubDate>
      
      <guid>https://xercoy.github.io/superfluous/post/002_makefile/</guid>
      <description>Make is a build automation tool. It reads directives from a file called a Makefile. People familiar with building or installing Linux application and tools from source will be very familiar with this.
In Unix and Unix-like operating systems, make is oftentimes built in. You can create your own Makefile and have fun with it without needing to install anything.
In addition to building applications, it can perform certain operations related to preparing and manipulating the project.</description>
    </item>
    
    <item>
      <title>#001: Barebones</title>
      <link>https://xercoy.github.io/superfluous/post/001_barebones/</link>
      <pubDate>Fri, 02 Nov 2018 19:26:54 -0700</pubDate>
      
      <guid>https://xercoy.github.io/superfluous/post/001_barebones/</guid>
      <description>First Post! I never formally created a project with most of the knowledge I&amp;rsquo;ve gained ths far, and I wanted to focus on every aspect of the project: how it&amp;rsquo;s built, how the application works, how it&amp;rsquo;s prepared, deployed, etc. I think these posts will be a great introduction into getting a some idea about the &amp;ldquo;fuzzy&amp;rdquo; stuff we see in web dev; making sense of the buzzwords and learning how things work.</description>
    </item>
    
  </channel>
</rss>